// Code generated by mockery 2.7.5. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	gcp "piccolo.com/planner/pkg/common/gcp"
)

// CollectionRef is an autogenerated mock type for the CollectionRef type
type CollectionRef struct {
	mock.Mock
}

// Add provides a mock function with given fields: _a0, _a1
func (_m *CollectionRef) Add(_a0 context.Context, _a1 interface{}) (gcp.DocumentRef, gcp.WriteResult, error) {
	ret := _m.Called(_a0, _a1)

	var r0 gcp.DocumentRef
	if rf, ok := ret.Get(0).(func(context.Context, interface{}) gcp.DocumentRef); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(gcp.DocumentRef)
		}
	}

	var r1 gcp.WriteResult
	if rf, ok := ret.Get(1).(func(context.Context, interface{}) gcp.WriteResult); ok {
		r1 = rf(_a0, _a1)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(gcp.WriteResult)
		}
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(context.Context, interface{}) error); ok {
		r2 = rf(_a0, _a1)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}
